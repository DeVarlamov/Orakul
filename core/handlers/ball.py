import asyncio
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from sqlalchemy import func
from core.db_config.db_config import Stikers_for_ball, YesAndNo, session
from core.keyboard.keybordbutton import keyboard_balls, keyboard
from core.utils.statesform import StateForm


async def ball_predictor(message: Message, state: FSMContext):
    """–•–µ–¥–ª–µ—Ä –≤–æ–ø—Ä–æ—Å–∞."""
    await message.reply("–ù–∞–ø–∏—à–∏ –º–Ω–µ 1 –≤–æ–ø—Ä–æ—Å –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç",
                        reply_markup=keyboard_balls)
    await state.set_state(StateForm.GET_TEXT)


async def yes_or_no(message: Message, state: FSMContext):
    """–•–µ–¥–ª–µ—Ä –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å."""
    if message.text == '–æ—Ç–º–µ–Ω–∞':
        await state.clear()
        await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é', reply_markup=keyboard)
    else:
        result = session.query(YesAndNo).order_by(func.random()).first()
        await message.answer('C–≤—è–∑—å —Å –∫–æ—Å–º–æ—Å–æ–º üï£üï§üï•')
        await asyncio.sleep(1)
        stikers = session.query(
            Stikers_for_ball).order_by(func.random()).first().name
        await message.answer_sticker(stikers)
        await asyncio.sleep(3)
        await message.reply(f'{result}'
                            '.\r\n ‚¨ÖÔ∏è –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é',
                            reply_markup=keyboard)
    await state.clear()
